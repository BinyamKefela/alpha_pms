# Generated by Django 5.2.6 on 2025-10-21 13:53

import django.db.models.deletion
import django.utils.timezone
import pms.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrokerTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_type', models.CharField(choices=[('sales commission', 'sales commission'), ('rent commission', 'rent commission')], max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('max_locations', models.IntegerField()),
                ('max_staff', models.IntegerField(null=True)),
                ('max_users', models.IntegerField()),
                ('max_kds', models.IntegerField()),
                ('kds_enabled', models.BooleanField(default=False)),
                ('price', models.IntegerField()),
                ('billing_cycle', models.CharField(choices=[('daily', 'daily'), ('weekly', 'weekly'), ('monthly', 'monthly'), ('quarterly', 'quarterly'), ('yearly', 'yearly')], max_length=100)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SAASTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_type', models.CharField(choices=[('sales commission', 'sales commission'), ('rent commission', 'rent commission')], max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('middle_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('phone_number', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to=pms.models.get_upload_path, validators=[pms.models.validate_uploaded_image_extension])),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', null=True, related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', null=True, related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='BrokerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=100)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.02, max_digits=5)),
                ('wallet', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='broker_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailResetCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(max_length=100)),
                ('requested_at', models.DateTimeField(null=True)),
                ('resolved_at', models.DateTimeField(null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'maintenance_request',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('maintenance_request_created', 'maintenance request created'), ('maintenance_request_resolved', 'maintenance request resolved'), ('rent_over_due', 'rent over due'), ('payment_complete', 'payment complete')], max_length=100)),
                ('message', models.CharField(max_length=200)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('read_at', models.DateTimeField(null=True)),
                ('maintenance_request_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.maintenancerequest')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.notification')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(null=True)),
                ('due_date', models.DateTimeField(null=True)),
                ('status', models.CharField(max_length=100)),
                ('payment_method', models.CharField(max_length=100)),
                ('transaction_id', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='payment_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.payment'),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('bed_rooms', models.IntegerField(blank=True, null=True)),
                ('bath_rooms', models.IntegerField(blank=True, null=True)),
                ('rent', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_id', to=settings.AUTH_USER_MODEL)),
                ('owner_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'property',
            },
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='property_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.property'),
        ),
        migrations.CreateModel(
            name='PropertyPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('property_image', models.FileField(blank=True, null=True, upload_to=pms.models.get_property_upload_path, validators=[pms.models.validate_uploaded_image_extension])),
                ('property_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_pictures', to='pms.property')),
            ],
            options={
                'db_table': 'property_picture',
            },
        ),
        migrations.CreateModel(
            name='PropertyZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_manager_id', to=settings.AUTH_USER_MODEL)),
                ('owner_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_owner_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'property_zone',
            },
        ),
        migrations.AddField(
            model_name='property',
            name='property_zone_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_zone_id', to='pms.propertyzone'),
        ),
        migrations.CreateModel(
            name='OwnerStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_staff', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_owner', to=settings.AUTH_USER_MODEL)),
                ('property_zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_zone_staff', to='pms.propertyzone')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_manager', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_manager', to=settings.AUTH_USER_MODEL)),
                ('property_zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_zone_manager', to='pms.propertyzone')),
            ],
        ),
        migrations.CreateModel(
            name='CoworkingSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('capacity', models.IntegerField()),
                ('price_daily', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_quarterly', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_yearly', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coworking_spaces', to='pms.propertyzone')),
            ],
            options={
                'unique_together': {('name', 'zone')},
            },
        ),
        migrations.CreateModel(
            name='PropertyZonePicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('property_image', models.FileField(blank=True, null=True, upload_to=pms.models.get_property_zone_upload_path, validators=[pms.models.validate_uploaded_image_extension])),
                ('property_zone_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_pictures', to='pms.propertyzone')),
            ],
            options={
                'db_table': 'property_zone_picture',
            },
        ),
        migrations.CreateModel(
            name='PropertyZoneSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_price', models.IntegerField()),
                ('selling_price', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('complete', 'complete'), ('cancelled', 'cancelled')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('broker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_sale_broker', to=settings.AUTH_USER_MODEL)),
                ('property_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.property')),
                ('property_zone_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.propertyzone')),
            ],
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rent_type', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('payment_cycle', models.CharField(max_length=100)),
                ('rent_amount', models.FloatField()),
                ('deposit_amount', models.FloatField()),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('broker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rent_broker', to=settings.AUTH_USER_MODEL)),
                ('property_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rents', to='pms.property')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rent',
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='rent_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.rent'),
        ),
        migrations.AddField(
            model_name='notification',
            name='rent_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.rent'),
        ),
        migrations.CreateModel(
            name='RentCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saas_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('broker_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.rent')),
            ],
        ),
        migrations.CreateModel(
            name='RentCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_start', models.DateField()),
                ('cycle_end', models.DateField()),
                ('is_paid', models.BooleanField(default=False)),
                ('amount_due', models.FloatField()),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.payment')),
                ('rent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycles', to='pms.rent')),
            ],
        ),
        migrations.CreateModel(
            name='RentPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('rent_image', models.FileField(upload_to='', verbose_name=models.FileField(blank=True, null=True, upload_to=pms.models.get_rent_upload_path, validators=[pms.models.validate_uploaded_image_extension]))),
                ('rent_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.rent')),
            ],
            options={
                'db_table': 'rent_picture',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=100)),
                ('report_data', models.CharField(max_length=900)),
                ('created_at', models.DateTimeField(null=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('property_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.property')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='SalesPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('complete', 'complete'), ('cancelled', 'cancelled')], max_length=100)),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_id', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('property_zone_sale_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.propertyzonesale')),
            ],
            options={
                'db_table': 'sale_payment',
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saas_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('broker_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pms.salespayment')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=100)),
                ('billing_cycle', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('start_date', models.DateTimeField()),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkSpaceRental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guest_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('guest_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('cycle', models.CharField(choices=[('daily', 'Daily'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('start_date', models.DateField()),
                ('next_due_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='pms.coworkingspace')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workspace_rentals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RentalPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('complete', 'complete'), ('cancelled', 'cancelled')], max_length=100)),
                ('payment_method', models.CharField(max_length=100)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('cycle_start', models.DateField()),
                ('cycle_end', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='pms.workspacerental')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='property',
            unique_together={('name', 'property_zone_id')},
        ),
        migrations.CreateModel(
            name='SubscriptionPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=100)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('subscription_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pms.subscription')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('transaction_id',)},
            },
        ),
    ]
